{
    prHourlyLimit: 10,
    enabledManagers: ["custom.regex", "github-actions"],
    customManagers: [
        {
            customType: "regex",
            fileMatch: ["^data/versions.yaml$", "^\\.pre-commit-config\\.yaml$"],
            matchStrings: [
                "# renovate: datasource=(?<datasource>git.*-tags) depName=(?<depName>[^\\s]+?)(?: depType=(?<depType>[^\\s]+?))?(?: (?:lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?\\s+[A-Za-z0-9_/-]+?\\s*:\\s*[\"']?(?<currentDigest>[a-f0-9]+?)\\s+#\\s*(?<currentValue>v?[0-9.]+?)[\"']?\\s",
                "# renovate: datasource=(?<datasource>docker) depName=(?<depName>[^\\s]+?)(?: depType=(?<depType>[^\\s]+?))?(?: (?:lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?\\s+[A-Za-z0-9_/-]+?\\s*:\\s*[\"']?([^:\\s]+:)?(?<currentValue>.+?)@(?<currentDigest>sha256:[a-f0-9]+?)[\"']?\\s",
                "# renovate: datasource=(?<datasource>[a-z-.]+?) depName=(?<depName>[^\\s]+?)(?: depType=(?<depType>[^\\s]+?))?(?: (?:lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?\\s+[A-Za-z0-9_/-]+?\\s*:\\s*[\"']?(?<currentValue>v?[0-9.]+?)[\"']?\\s",
            ],
        },
        {
            customType: "regex",
            fileMatch: ["^\\.pre-commit-config\\.yaml$"],
            matchStrings: [
                "# renovate: datasource=(?<datasource>pypi) depName=(?<depName>[^\\s]+?)(?: depType=(?<depType>[^\\s]+?))?(?: (?:lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?\\s+-\\s*[\"']?[A-Za-z0-9_\\-\\.]+?==(?<currentValue>.+?)[\"']?\\s",
            ],
        },
        {
            customType: "regex",
            fileMatch: ["^noxfile\\.py$"],
            matchStrings: [
                "# renovate: datasource=(?<datasource>pypi)(?: depType=(?<depType>[^\\s]+?))?(?: (?:lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?\\s+[^\\n]*\"(?<depName>[A-Za-z0-9_\\-\\.]+?)==(?<currentValue>.+?)\",?\\s",
            ],
        },
        {
            customType: "regex",
            fileMatch: ["^data/salt_latest_point.yaml$"],
            matchStrings: [
                "(?<major>\\d+): (?<minor>\\d+)\\s",
            ],
            currentValueTemplate: "{{{major}}}.{{{minor}}}",
            autoReplaceStringTemplate: "{{{newMajor}}}: {{{newMinor}}}\n",
            datasourceTemplate: "pypi",
            depTypeTemplate: "salt",
            packageNameTemplate: "salt",
        },
    ],
    packageRules: [
        {
            matchDepTypes: ["action", "actionMisc", "devDependencies"],
            matchDatasources: ["/git.*-tags/", "docker"],
            matchPackageNames: ["!https://github.com/codecov/codecov-cli"],
            pinDigests: true,
        },
        {
            matchPackageNames: ["docker.io/library/python"],
            separateMinorPatch: true,  // We want to keep Python major.minor - this needs to be separate and before the next step
        },
        {
            matchPackageNames: ["docker.io/library/python"],
            matchUpdateTypes: ["major", "minor"],
            enabled: false,
        },
        {
            // The salt dependency type is only for keeping the known point release up to date (used for generating the test workflow).
            // Major versions need to be added manually to the list in data/salt_latest_point.yaml.
            matchDepTypes: ["salt"],
            matchUpdateTypes: ["major"],
            enabled: false,
        },
        {
            matchPackageNames: ["docker.io/library/python"],
            matchUpdateTypes: ["patch"],
            automerge: true,
        },
        {
            matchDepTypes: ["github-runner"],
            groupName: "github runners",
            branchNameStrict: true,
        },
        {
            matchDepTypes: ["devDependencies"],
            matchUpdateTypes: ["patch", "minor"],
            groupName: "dev dependencies (non-major)",
            automerge: true,
            branchNameStrict: true,
        },
        {
            matchDepTypes: ["action", "actionMisc"],
            matchUpdateTypes: ["patch", "minor"],
            groupName: "actions (non-major)",
            automerge: true,
            branchNameStrict: true,
        },
    ],
}
